<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace=绑定一个对应的Dao/Mapper接口-->
<mapper namespace="com.ly.dao.UserMapper">

    <!--结果集映射-->
    <resultMap id="UserMap" type="User">
        <!--column数据库中的字段，property实体类中的属性-->
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="pwd" property="password"/>
    </resultMap>

    <!--通配符查询-->
    <select id="getUserLike" resultMap="UserMap">
        select * from mybatis.user where name like #{arg};
    </select>

    <!--(#{userId}, #{userName}, #{password})和map中的key一一对应 -->
    <insert id="addUserByMap" parameterType="map">
        insert into mybatis.user (id, name, pwd) values (#{userId}, #{userName}, #{password});
    </insert>

    <select id="getUserList" resultMap="UserMap">
        select * from mybatis.user;
    </select>

    <select id="getUserById" parameterType="int" resultMap="UserMap">
        select * from mybatis.user where id = #{id};
    </select>

    <!--插入语句，(#{id}, #{name}, #{password})与User对象中的字段一致-->
    <insert id="addUser" parameterType="User">
        insert into user (id, name, pwd) values (#{id}, #{name}, #{password});
    </insert>

    <update id="updateUser" parameterType="User">
        update mybatis.user set name = #{name}, pwd = #{password} where id = #{id};
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from mybatis.user where id = #{id};
    </delete>

    <!--实现分页-->
    <select id="getUserByLimit" parameterType="map" resultMap="UserMap">
        select * from mybatis.user limit #{startIndex}, #{pageSize};
    </select>



</mapper>
